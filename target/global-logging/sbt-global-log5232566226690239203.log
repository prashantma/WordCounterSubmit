[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\Administrator\AppData\Local\Temp\1\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\Administrator\AppData\Local\Temp\1\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.5.5 (Oracle Corporation Java 1.8.0_171)
[debug]       Load.loadUnit: plugins took 100.4531ms
[debug]       Load.loadUnit: defsScala took 0.4317ms
[debug] [Loading] Scanning directory C:\Users\Administrator\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Administrator\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 27.0103 ms
[debug]           Load.resolveProject(global-plugins) took 63.7397ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\Administrator\.sbt\1.0\plugins, plugins: List(<none>))) took 126.7152ms
[debug] [Loading] Done in C:\Users\Administrator\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 150.0403ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.4222ms
[debug]     Load.loadUnit(file:/C:/Users/Administrator/.sbt/1.0/plugins/, ...) took 260.5689ms
[debug]   Load.apply: load took 446.9434ms
[debug]   Load.apply: resolveProjects took 7.2922ms
[debug]   Load.apply: finalTransforms took 82.4503ms
[debug]   Load.apply: config.delegates took 10.5513ms
[debug]   Load.apply: Def.make(settings)... took 529.6016ms
[debug]   Load.apply: structureIndex took 165.5437ms
[debug]   Load.apply: mkStreams took 1.7959ms
[info] loading global plugins from C:\Users\Administrator\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 3431.2969ms
[debug]           Load.loadUnit: plugins took 42.5592ms
[debug]           Load.loadUnit: defsScala took 0.0049ms
[debug] [Loading] Scanning directory C:\Prashant\Java\Spark\Projects\WordCounterSubmit\project
[debug]             Load.loadUnit: mkEval took 10.2619ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Prashant\Java\Spark\Projects\WordCounterSubmit\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 3.359 ms
[info] loading settings for project wordcountersubmit-build from idea.sbt ...
[debug]               Load.resolveProject(wordcountersubmit-build) took 5.235ms
[debug]             Load.loadTransitive: finalizeProject(Project(id wordcountersubmit-build, base: C:\Prashant\Java\Spark\Projects\WordCounterSubmit\project, plugins: List(<none>))) took 9.3571ms
[debug] [Loading] Done in C:\Prashant\Java\Spark\Projects\WordCounterSubmit\project, returning: (wordcountersubmit-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 3010.6184ms
[debug]           Load.loadUnit: cleanEvalClasses took 6.9713ms
[debug]         Load.loadUnit(file:/C:/Prashant/Java/Spark/Projects/WordCounterSubmit/project/, ...) took 3061.3832ms
[debug]       Load.apply: load took 3063.322ms
[debug]       Load.apply: resolveProjects took 0.1905ms
[debug]       Load.apply: finalTransforms took 29.1132ms
[debug]       Load.apply: config.delegates took 4.0307ms
[debug]       Load.apply: Def.make(settings)... took 120.1418ms
[debug]       Load.apply: structureIndex took 46.1193ms
[debug]       Load.apply: mkStreams took 0.0033ms
[info] loading project definition from C:\Prashant\Java\Spark\Projects\WordCounterSubmit\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[debug]     Load.loadUnit: plugins took 5093.9461ms
[debug]     Load.loadUnit: defsScala took 0.004ms
[debug] [Loading] Scanning directory C:\Prashant\Java\Spark\Projects\WordCounterSubmit
[debug]       Load.loadUnit: mkEval took 0.2793ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Prashant\Java\Spark\Projects\WordCounterSubmit, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 3.9524 ms
[info] loading settings for project wordcountersubmit from build.sbt ...
[debug]         Load.resolveProject(wordcountersubmit) took 34.0255ms
[debug]       Load.loadTransitive: finalizeProject(Project(id wordcountersubmit, base: C:\Prashant\Java\Spark\Projects\WordCounterSubmit, plugins: List(<none>))) took 39.4543ms
[debug] [Loading] Done in C:\Prashant\Java\Spark\Projects\WordCounterSubmit, returning: (wordcountersubmit)
[debug]     Load.loadUnit: loadedProjectsRaw took 1503.9807ms
[debug]     Load.loadUnit: cleanEvalClasses took 10.1797ms
[debug]   Load.loadUnit(file:/C:/Prashant/Java/Spark/Projects/WordCounterSubmit/, ...) took 6608.8358ms
[debug] Load.apply: load took 6610.5462ms
[debug] Load.apply: resolveProjects took 0.1221ms
[debug] Load.apply: finalTransforms took 28.5668ms
[debug] Load.apply: config.delegates took 0.4015ms
[debug] Load.apply: Def.make(settings)... took 81.5282ms
[debug] Load.apply: structureIndex took 34.6317ms
[debug] Load.apply: mkStreams took 0.0028ms
[info] set current project to WordCounterSubmit (in build file:/C:/Prashant/Java/Spark/Projects/WordCounterSubmit/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 5171 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 5171, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to WordCounterSubmit (in build file:/C:/Prashant/Java/Spark/Projects/WordCounterSubmit/)
[debug] > Exec(idea-shell, None, None)
